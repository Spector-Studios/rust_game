name: Build and Deploy

on:
  push: { branches: ["main"] }
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache cargo crates
        env:
          cache-name: cargo-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.toml
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-${{ env.cache-name }}-

      - name: Cache target dir
        env:
          cache-name: cargo-build-cache
        uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-cargo-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-${{ env.cache-name }}-

      - name: Install Rust toolchains
        run: |
          rustup target add wasm32-unknown-unknown
          rustup target add armv7-linux-androideabi
          rustup target add aarch64-linux-android
          rustup target add i686-linux-android
          rustup target add x86_64-linux-android

        # Done here for cacheing
      - name: Install cargo-quad-apk
        run: cargo install --git "https://github.com/not-fl3/cargo-quad-apk.git"

      - name: Build for all targets
        run: |
          cargo build --release
          cargo build --profile web-release --target wasm32-unknown-unknown

      - name: Build WASM
        run: ./wasm_build.sh --profile web-release

      - name: Upload WASM Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist folder
          path: 'dist'

      - name: NDK cache
        id: cache-ndk
        env:
          cache-name: ndk-r25b-cache
        uses: actions/cache@v4
        with:
          path: ./android
          key: build-${{ env.cache-name }}

      - name: Download NDK
        if: ${{ steps.cache-ndk.outputs.cache-hit != 'true' }}
        run: |
          mkdir ./android
          cd ./android
          wget -q https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
          unzip -q android-ndk-r25b-linux.zip
          ls -la
          ls -la android-ndk-r25b
          rm android-ndk-r25b-linux.zip

      - name: Build Android APK
        env:
          NDK_HOME: ./android/android-ndk-r25b
        run: |
          echo $NDK_HOME
          cargo quad-apk build --package dungeoncrawl --release --nosign

      - name: Sign APK
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASSWORD }}
        run: |
          mkdir apk
          cp "target/android-artifacts/release/apk/dungeoncrawl.apk" "apk/unsigned.apk"
          cd apk
          echo "$KEYSTORE_BASE64" > apk.keystore.base64
          base64 -d apk.keystore.base64 > apk.keystore
          "$ANDROID_HOME/build-tools/36.0.0/apksigner" sign --ks apk.keystore --ks-key-alias dungeoncrawl --ks-pass pass:"$KEYSTORE_PASS" --out "dungeoncrawl_signed.apk" unsigned.apk
          rm "apk.keystore.base64" "apk.keystore"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Built-APK
          path: apk/

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
